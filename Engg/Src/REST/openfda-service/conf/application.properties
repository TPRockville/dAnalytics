# SPRING CONFIG (ConfigFileApplicationListener)
#spring.config.name= # config file name (default to 'application')
#spring.config.location= # location of config file

# PROFILES
#spring.profiles.active= dev
#spring.profiles.include= # unconditionally activate the specified comma separated profiles

# APPLICATION SETTINGS (SpringApplication)
spring.main.show-banner=true

# LOGGING
logging.path=/var/logs
logging.file=openfda.log
logging.config= classpath:logback.xml
logging.level.*= INFO
#logging.level.org.springframework=INFO


# IDENTITY (ContextIdApplicationContextInitializer)
spring.application.name= openfda
spring.application.index= 1

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
server.port=8080
server.address= localhost
server.session-timeout= 60
server.context-path= /jderive
#server.servlet-path= # the servlet path, defaults to '/'
#server.ssl.enabled=true # if SSL support is enabled
#server.ssl.client-auth= # want or need
#server.ssl.key-alias=
#server.ssl.ciphers= # supported SSL ciphers
#server.ssl.key-password=
#server.ssl.key-store=
#server.ssl.key-store-password=
#server.ssl.key-store-provider=
#server.ssl.key-store-type=
#server.ssl.protocol=TLS
#server.ssl.trust-store=
#server.ssl.trust-store-password=
#server.ssl.trust-store-provider=
#server.ssl.trust-store-type=
server.tomcat.access-log-pattern= # log pattern of the access log
server.tomcat.access-log-enabled=true
#server.tomcat.compression=off # is compression enabled (off, on, or an integer content length limit)
#server.tomcat.compressable-mime-types=text/html,text/xml,text/plain # comma-separated list of mime types that Tomcat will compress
#server.tomcat.internal-proxies=10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\
        192\\.168\\.\\d{1,3}\\.\\d{1,3}|\\
        169\\.254\\.\\d{1,3}\\.\\d{1,3}|\\
        127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3} # regular expression matching trusted IP addresses
#server.tomcat.protocol-header=x-forwarded-proto # front end proxy forward header
#server.tomcat.port-header= # front end proxy port header
#server.tomcat.remote-ip-header=x-forwarded-for
#server.tomcat.basedir=/tmp # base dir (usually not needed, defaults to tmp)
#server.tomcat.background-processor-delay=30; # in seconds
server.tomcat.max-http-header-size= 5120
server.tomcat.max-threads = 100
server.tomcat.uri-encoding = UTF-8

# SPRING HATEOAS (HateoasProperties)
spring.hateoas.apply-to-primary-object-mapper=true


# HTTP encoding (HttpEncodingProperties)
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
#spring.http.encoding.force=true

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.name= openfda-ds
#spring.datasource.initialize=true
#spring.datasource.schema= classpath:openfda-ddl.sql
#spring.datasource.data= classpath:openfda-dml.sql
#spring.datasource.sql-script-encoding= UTF-8
#spring.datasource.platform= # the platform to use in the schema resource (schema-${platform}.sql)
spring.datasource.continue-on-error=true
spring.datasource.separator=;
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.username=sa
#spring.datasource.password=""
spring.datasource.url=jdbc:mariadb://192.168.20.50:3306/drug_test?user=root&password=root123&useUnicode=true&characterEncoding=UTF8
#spring.datasource.jndi-name= # For JNDI lookup (class, url, username & password are ignored when set)
spring.datasource.max-active=100
spring.datasource.max-idle=8
spring.datasource.min-idle=8
spring.datasource.initial-size=10
spring.datasource.validation-query=SELECT 1 FROM DUAL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
# DAO (PersistenceExceptionTranslationAutoConfiguration)
spring.dao.exceptiontranslation.enabled=true

# JMX
spring.jmx.enabled=true

# MONGODB (MongoProperties)
#spring.data.mongodb.host= # the db host
#spring.data.mongodb.port=27017 # the connection port (defaults to 27107)
#spring.data.mongodb.uri=mongodb://localhost/test # connection URL
#spring.data.mongodb.database=
#spring.data.mongodb.authentication-database=
#spring.data.mongodb.grid-fs-database=
#spring.data.mongodb.username=
#spring.data.mongodb.password=
#spring.data.mongodb.repositories.enabled=true # if spring data repository support is enabled

# FLYWAY (FlywayProperties)
#flyway.check-location=false # check that migration scripts location exists
#flyway.locations=classpath:db/migration # locations of migrations scripts
#flyway.schemas= # schemas to update
#flyway.init-version= 1 # version to start migration
#flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it
#flyway.sql-migration-prefix=V
#flyway.sql-migration-suffix=.sql
#flyway.enabled=true
#flyway.url= # JDBC url if you want Flyway to create its own DataSource
#flyway.user= # JDBC username if you want Flyway to create its own DataSource
#flyway.password= # JDBC password if you want Flyway to create its own DataSource

# LIQUIBASE (LiquibaseProperties)
#liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml
#liquibase.check-change-log-location=true # check the change log location exists
#liquibase.contexts= # runtime contexts to use
#liquibase.default-schema= # default database schema to use
#liquibase.drop-first=false
#liquibase.enabled=true
#liquibase.url= # specific JDBC url (if not set the default datasource is used)
#liquibase.user= # user name for liquibase.url
#liquibase.password= # password for liquibase.url
